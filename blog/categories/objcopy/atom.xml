<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objcopy | a m4lefic security blog]]></title>
  <link href="http://ma11ock.github.io/blog/categories/objcopy/atom.xml" rel="self"/>
  <link href="http://ma11ock.github.io/"/>
  <updated>2016-04-15T14:34:36-05:00</updated>
  <id>http://ma11ock.github.io/</id>
  <author>
    <name><![CDATA[m4lefic]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GDB]]></title>
    <link href="http://ma11ock.github.io/blog/2016/04/15/gdbdbg/"/>
    <updated>2016-04-15T12:54:38-05:00</updated>
    <id>http://ma11ock.github.io/blog/2016/04/15/gdbdbg</id>
    <content type="html"><![CDATA[<h1>GDB Debug Symbols</h1>

<ul>
<li>Gives various information about variables, functions, etc in a binary that can be read by the debugger</li>
<li>Can be part of the binary or a separate file</li>
<li>GCC <strong>-ggdb</strong> to compile with debug symbols for gdb</li>
</ul>


<p><img src="/images/gdbinfovar.png" alt="gdb info variables" /></p>

<ul>
<li><strong>list</strong>   <em>#will drop us to the main function if it has the source available</em></li>
<li><strong>list 3</strong> <em>#will take you to that line of the source</em></li>
<li><strong>info variables</strong> <em>#if compiled with dbg symbols  will display found variables under defined for the source file</em></li>
<li><em>if not compiled with symbols or source not available, the variables may be found and listed under non-debugging symbols</em></li>
<li><strong>info scope functionName</strong> <em>#will provide local variables</em></li>
</ul>


<p><img src="/images/gdbsymbols.png" alt="gdb info functions" /></p>

<ul>
<li>here we use info functions to display all functions found in the source with debug options given at compile time</li>
</ul>


<h1>Stripping Debug Symbols</h1>

<ul>
<li><strong>objcopy &ndash;only-keep-debug binary dstfile</strong>  <em>#used to strip debug symbols from a binary &amp; save symbols to file</em></li>
<li><strong>strip &ndash;strip-debug binary</strong>                <em>#used to strip symbols from binary - use</em> <strong>&ndash;strip-uneeded</strong> <em>to provide only enough to load binary (less information)</em></li>
</ul>


<h1>Adding Debug Symbols</h1>

<ul>
<li><strong>symbol-file symbols</strong>   <em>#used to add debug symbols file to binary without symbols at runtime in</em> <strong>gdb</strong></li>
<li><strong>objcopy -add-gnu-debuglink=debug_symbols binary</strong> <em>#used to add debug symbols to stripped binary where</em> <strong>debug_symbols</strong> <em>is the symbols file, and</em> <strong>binary</strong> <em>is the stripped binary</em></li>
</ul>

]]></content>
  </entry>
  
</feed>
